<?php

namespace WellnessCoreBundle\Repository;

use Doctrine\ORM\Query\ResultSetMapping;

/**
 * ProviderRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ProviderRepository extends \Doctrine\ORM\EntityRepository
{
    public function getListCatServFromProvider($id)
    {
        /*
         * SELECT categoryservice.name, categoryservice.description
         * FROM provider_categoryservice
         * INNER JOIN categoryservice ON categoryservice.id = provider_categoryservice.categoryservice_id
         * INNER JOIN user ON user.id = provider_categoryservice.provider_id
         * WHERE user.name = "Institut viviane"
         */

        $qb = $this->createQueryBuilder('p');
        $qb->leftJoin('p.categoryservice', 'c');
        $qb->where('p.id =:id');
        $qb->setParameter('id', $id);
        $query = $qb->getQuery();
        $result = $query->getResult();

        return $result;
    }


    /*public function SearchProvider($searchName, $searchCategory, $searchLocality)
    {
        $rsm = new ResultSetMapping();
        $rsm->addEntityResult('WellnessCoreBundle\Entity\Provider', 'provider');
        $rsm->addFieldResult('provider', 'id', 'id');
        $rsm->addFieldResult('provider', 'name', 'name');

        $sql = 'SELECT provider.name FROM provider';

        $query = $this->_em->createNativeQuery($sql, $rsm);
        return $query->getResult();

       /* $rsm = new ResultSetMapping;
        $rsm->addEntityResult('WellnessCoreBundle\Entity\Provider', 'p');
        $rsm->addFieldResult('p', 'id', 'id');
        $rsm->addFieldResult('p', 'name', 'name');

        $query = $this->_em->createNativeQuery('SELECT id, name FROM provider WHERE name = ?', $rsm);
        $query->setParameter(1, $searchName);

        return $query->getResult();
    }*/

    public function SearchProvider($searchName, $searchCategory, $searchLocality){

        $qb = $this->createQueryBuilder('p');
        $qb->leftJoin('p.CategoryService', 'c');
       /* $qb->leftJoin('p.user', 'u');
        $qb->leftJoin('u.Locality', 'l');*/
        $qb->orderBy('p.name', 'ASC');

        $qb->where('p.name =:name');
        $qb->setParameter('name', $searchName);

        /*$qb->where('c.CategoryService =:Category');
        $qb->setParameter('Category', $searchCategory);*/

        /*$qb->where('p.Locality =:Locality');
        $qb->setParameter('Locality', $searchLocality);*/

        $query = $qb->getQuery();
        $result = $query->getResult();

        return $result;
    }
}
